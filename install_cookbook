#!/usr/bin/env ruby

# Copyright 2012, Mirantis

require 'rubygems'
require 'tmpdir'
require 'fileutils'
require 'json'
require 'httpclient'
require 'chef'

HTTP_DIR = "/var/www"
ADMIN_URL = "http://127.0.0.1:8000/api"

def create_cookbook(metafile)
  puts "Processing '#{metafile}' metadata file..."
  md = Chef::Cookbook::Metadata.new
  md.from_file(metafile)

  cook_name = md.name.empty? ? File.basename(File.dirname(metafile)) : md.name

  begin
    Dir.mktmpdir do |dir|
      cook_dir = File.join(dir, cook_name)
      tar_name = "#{cook_name}_#{md.version}.tar.gz"
      FileUtils.cp_r(File.dirname(metafile), cook_dir)
      system "cd \"#{dir}\" && tar czf \"#{tar_name}\" \"#{cook_name}\""
      FileUtils.mv(File.join(dir, "#{tar_name}"), HTTP_DIR)
      puts "Cookbook archived at '#{HTTP_DIR}/#{tar_name}'"
    end
  rescue Exception => e
    puts "Unknown error: #{e.message}"
    puts e.backtrace
    return false
  end
end

### MAIN ###
puts "Provide path to cookbook for uploading" if ARGV.length == 0
ARGV.each do |src|
  case
  when /tar\.gz$/ =~ src
    # Could be cookbook
    Dir.mktmpdir do |tmpdir|
      src = File.expand_path(src)
      system "tar xzf \"#{src}\" -C \"#{tmpdir}\""

      folder = File.basename(src, '.tar.gz')
      metafile = File.join(tmpdir, folder, "metadata.rb")
      if File.exists?(metafile)
        create_cookbook(metafile)
      else
        puts "Error: File #{metafile} not found."
        puts "We suspect that '#{src}' contains '#{folder}' folder. Skipping."
      end
    end

  when File.exists?(File.join(src, "metadata.rb"))
    create_cookbook(File.expand_path(File.join(src, "metadata.rb")))

  when File.basename(src) == "metadata.rb"
    create_cookbook(File.expand_path(src))

  else
    puts "'#{src}' is not valid cookbook folder or not a valid cookbook archive. Skipping."
    puts "Valid cookbook archive should contain <folder>/metadata.rb file."
    next
  end
end
